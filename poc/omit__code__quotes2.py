
#!/usr/bin/env python3
# omit__code__quotes2.py
# cell_41
import mpos
import dispatcher
import re
import &lt;div&gt;&lt;div&gt;&lt;div&gt;&lt;div&gt;&lt;div&gt;&lt;div&gt;raw__{⟪&lt;/div&gt;&lt;div&gt;def__rmcodequotesstate0__(self,__textlist):&lt;/div&gt;&lt;div&gt;&amp;nbsp;__&amp;nbsp;__if__(0__==__len__(textlist)):&lt;/div&gt;&lt;div&gt;&amp;nbsp;__&amp;nbsp;__&amp;nbsp;__&amp;nbsp;__return__[]&lt;/div&gt;&lt;div&gt;&amp;nbsp;__&amp;nbsp;__else:&lt;/div&gt;&lt;div&gt;&amp;nbsp;__&amp;nbsp;__&amp;nbsp;__&amp;nbsp;__first__=__textlist__[0];&lt;/div&gt;&lt;div&gt;&amp;nbsp;__&amp;nbsp;__&amp;nbsp;__&amp;nbsp;__rest__=__textlist__[1:]&lt;/div&gt;&lt;div&gt;&amp;nbsp;__&amp;nbsp;__&amp;nbsp;__&amp;nbsp;__if__(first__==__'```'):&lt;/div&gt;&lt;div&gt;&amp;nbsp;__&amp;nbsp;__&amp;nbsp;__&amp;nbsp;__&amp;nbsp;__&amp;nbsp;__return__self.rmcodequotesstate1__(rest)&lt;/div&gt;&lt;div&gt;&amp;nbsp;__&amp;nbsp;__&amp;nbsp;__&amp;nbsp;__else:&lt;/div&gt;&lt;div&gt;&amp;nbsp;__&amp;nbsp;__&amp;nbsp;__&amp;nbsp;__&amp;nbsp;__&amp;nbsp;__return__[first]__+__self.rmcodequotesstate0__(rest)&lt;/div&gt;&lt;div&gt;&amp;nbsp;__&amp;nbsp;__&amp;nbsp;__&amp;nbsp;&amp;nbsp;&lt;/div&gt;&lt;div&gt;def__rmcodequotesstate1__(self,__textlist):&lt;/div&gt;&lt;div&gt;&amp;nbsp;__&amp;nbsp;__if__(0__==__len__(textlist)):&lt;/div&gt;&lt;div&gt;&amp;nbsp;__&amp;nbsp;__&amp;nbsp;__&amp;nbsp;__return__[]&lt;/div&gt;&lt;div&gt;&amp;nbsp;__&amp;nbsp;__else:&lt;/div&gt;&lt;div&gt;&amp;nbsp;__&amp;nbsp;__&amp;nbsp;__&amp;nbsp;__first__=__textlist__[0];&lt;/div&gt;&lt;div&gt;&amp;nbsp;__&amp;nbsp;__&amp;nbsp;__&amp;nbsp;__rest__=__textlist__[1:]&lt;/div&gt;&lt;div&gt;&amp;nbsp;__&amp;nbsp;__&amp;nbsp;__&amp;nbsp;__if__(first__==__'```'):&lt;/div&gt;&lt;div&gt;&amp;nbsp;__&amp;nbsp;__&amp;nbsp;__&amp;nbsp;__&amp;nbsp;__&amp;nbsp;__return__self.rmcodequotesstate0__(rest)&lt;/div&gt;&lt;div&gt;&amp;nbsp;__&amp;nbsp;__&amp;nbsp;__&amp;nbsp;__else:&lt;/div&gt;&lt;div&gt;&amp;nbsp;__&amp;nbsp;__&amp;nbsp;__&amp;nbsp;__&amp;nbsp;__&amp;nbsp;__return__self.rmcodequotesstate1__(rest)&lt;/div&gt;&lt;div&gt;⟫}&lt;/div&gt;&lt;div&gt;on__➢❲text❳__{⟪&lt;/div&gt;&lt;div&gt;&amp;nbsp;__&amp;nbsp;__text__=__message.data.split__('%5cn')&lt;/div&gt;&lt;div&gt;&amp;nbsp;__&amp;nbsp;__result__=__self.rmcodequotesstate0__(text)&lt;/div&gt;&lt;div&gt;&amp;nbsp;__&amp;nbsp;__self.send__('[text]',__result)&lt;/div&gt;&lt;div&gt;⟫}&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;
class _omit__code__quotes2 (mpos.Container):
  def __init__ (self, dispatcher, parent, idInParent):
    super ().__init__ (dispatcher, parent, idInParent)
    self.inputs=['text']
    self.outputs=['[text]']
    
    
    child0 = &lt;div&gt;&lt;div&gt;&lt;div&gt;&lt;div&gt;&lt;div&gt;&lt;div&gt;raw__{⟪&lt;/div&gt;&lt;div&gt;def__rmcodequotesstate0__(self,__textlist):&lt;/div&gt;&lt;div&gt;&amp;nbsp;__&amp;nbsp;__if__(0__==__len__(textlist)):&lt;/div&gt;&lt;div&gt;&amp;nbsp;__&amp;nbsp;__&amp;nbsp;__&amp;nbsp;__return__[]&lt;/div&gt;&lt;div&gt;&amp;nbsp;__&amp;nbsp;__else:&lt;/div&gt;&lt;div&gt;&amp;nbsp;__&amp;nbsp;__&amp;nbsp;__&amp;nbsp;__first__=__textlist__[0];&lt;/div&gt;&lt;div&gt;&amp;nbsp;__&amp;nbsp;__&amp;nbsp;__&amp;nbsp;__rest__=__textlist__[1:]&lt;/div&gt;&lt;div&gt;&amp;nbsp;__&amp;nbsp;__&amp;nbsp;__&amp;nbsp;__if__(first__==__'```'):&lt;/div&gt;&lt;div&gt;&amp;nbsp;__&amp;nbsp;__&amp;nbsp;__&amp;nbsp;__&amp;nbsp;__&amp;nbsp;__return__self.rmcodequotesstate1__(rest)&lt;/div&gt;&lt;div&gt;&amp;nbsp;__&amp;nbsp;__&amp;nbsp;__&amp;nbsp;__else:&lt;/div&gt;&lt;div&gt;&amp;nbsp;__&amp;nbsp;__&amp;nbsp;__&amp;nbsp;__&amp;nbsp;__&amp;nbsp;__return__[first]__+__self.rmcodequotesstate0__(rest)&lt;/div&gt;&lt;div&gt;&amp;nbsp;__&amp;nbsp;__&amp;nbsp;__&amp;nbsp;&amp;nbsp;&lt;/div&gt;&lt;div&gt;def__rmcodequotesstate1__(self,__textlist):&lt;/div&gt;&lt;div&gt;&amp;nbsp;__&amp;nbsp;__if__(0__==__len__(textlist)):&lt;/div&gt;&lt;div&gt;&amp;nbsp;__&amp;nbsp;__&amp;nbsp;__&amp;nbsp;__return__[]&lt;/div&gt;&lt;div&gt;&amp;nbsp;__&amp;nbsp;__else:&lt;/div&gt;&lt;div&gt;&amp;nbsp;__&amp;nbsp;__&amp;nbsp;__&amp;nbsp;__first__=__textlist__[0];&lt;/div&gt;&lt;div&gt;&amp;nbsp;__&amp;nbsp;__&amp;nbsp;__&amp;nbsp;__rest__=__textlist__[1:]&lt;/div&gt;&lt;div&gt;&amp;nbsp;__&amp;nbsp;__&amp;nbsp;__&amp;nbsp;__if__(first__==__'```'):&lt;/div&gt;&lt;div&gt;&amp;nbsp;__&amp;nbsp;__&amp;nbsp;__&amp;nbsp;__&amp;nbsp;__&amp;nbsp;__return__self.rmcodequotesstate0__(rest)&lt;/div&gt;&lt;div&gt;&amp;nbsp;__&amp;nbsp;__&amp;nbsp;__&amp;nbsp;__else:&lt;/div&gt;&lt;div&gt;&amp;nbsp;__&amp;nbsp;__&amp;nbsp;__&amp;nbsp;__&amp;nbsp;__&amp;nbsp;__return__self.rmcodequotesstate1__(rest)&lt;/div&gt;&lt;div&gt;⟫}&lt;/div&gt;&lt;div&gt;on__➢❲text❳__{⟪&lt;/div&gt;&lt;div&gt;&amp;nbsp;__&amp;nbsp;__text__=__message.data.split__('%5cn')&lt;/div&gt;&lt;div&gt;&amp;nbsp;__&amp;nbsp;__result__=__self.rmcodequotesstate0__(text)&lt;/div&gt;&lt;div&gt;&amp;nbsp;__&amp;nbsp;__self.send__('[text]',__result)&lt;/div&gt;&lt;div&gt;⟫}&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;._&lt;div&gt;&lt;div&gt;&lt;div&gt;&lt;div&gt;&lt;div&gt;&lt;div&gt;raw__{⟪&lt;/div&gt;&lt;div&gt;def__rmcodequotesstate0__(self,__textlist):&lt;/div&gt;&lt;div&gt;&amp;nbsp;__&amp;nbsp;__if__(0__==__len__(textlist)):&lt;/div&gt;&lt;div&gt;&amp;nbsp;__&amp;nbsp;__&amp;nbsp;__&amp;nbsp;__return__[]&lt;/div&gt;&lt;div&gt;&amp;nbsp;__&amp;nbsp;__else:&lt;/div&gt;&lt;div&gt;&amp;nbsp;__&amp;nbsp;__&amp;nbsp;__&amp;nbsp;__first__=__textlist__[0];&lt;/div&gt;&lt;div&gt;&amp;nbsp;__&amp;nbsp;__&amp;nbsp;__&amp;nbsp;__rest__=__textlist__[1:]&lt;/div&gt;&lt;div&gt;&amp;nbsp;__&amp;nbsp;__&amp;nbsp;__&amp;nbsp;__if__(first__==__'```'):&lt;/div&gt;&lt;div&gt;&amp;nbsp;__&amp;nbsp;__&amp;nbsp;__&amp;nbsp;__&amp;nbsp;__&amp;nbsp;__return__self.rmcodequotesstate1__(rest)&lt;/div&gt;&lt;div&gt;&amp;nbsp;__&amp;nbsp;__&amp;nbsp;__&amp;nbsp;__else:&lt;/div&gt;&lt;div&gt;&amp;nbsp;__&amp;nbsp;__&amp;nbsp;__&amp;nbsp;__&amp;nbsp;__&amp;nbsp;__return__[first]__+__self.rmcodequotesstate0__(rest)&lt;/div&gt;&lt;div&gt;&amp;nbsp;__&amp;nbsp;__&amp;nbsp;__&amp;nbsp;&amp;nbsp;&lt;/div&gt;&lt;div&gt;def__rmcodequotesstate1__(self,__textlist):&lt;/div&gt;&lt;div&gt;&amp;nbsp;__&amp;nbsp;__if__(0__==__len__(textlist)):&lt;/div&gt;&lt;div&gt;&amp;nbsp;__&amp;nbsp;__&amp;nbsp;__&amp;nbsp;__return__[]&lt;/div&gt;&lt;div&gt;&amp;nbsp;__&amp;nbsp;__else:&lt;/div&gt;&lt;div&gt;&amp;nbsp;__&amp;nbsp;__&amp;nbsp;__&amp;nbsp;__first__=__textlist__[0];&lt;/div&gt;&lt;div&gt;&amp;nbsp;__&amp;nbsp;__&amp;nbsp;__&amp;nbsp;__rest__=__textlist__[1:]&lt;/div&gt;&lt;div&gt;&amp;nbsp;__&amp;nbsp;__&amp;nbsp;__&amp;nbsp;__if__(first__==__'```'):&lt;/div&gt;&lt;div&gt;&amp;nbsp;__&amp;nbsp;__&amp;nbsp;__&amp;nbsp;__&amp;nbsp;__&amp;nbsp;__return__self.rmcodequotesstate0__(rest)&lt;/div&gt;&lt;div&gt;&amp;nbsp;__&amp;nbsp;__&amp;nbsp;__&amp;nbsp;__else:&lt;/div&gt;&lt;div&gt;&amp;nbsp;__&amp;nbsp;__&amp;nbsp;__&amp;nbsp;__&amp;nbsp;__&amp;nbsp;__return__self.rmcodequotesstate1__(rest)&lt;/div&gt;&lt;div&gt;⟫}&lt;/div&gt;&lt;div&gt;on__➢❲text❳__{⟪&lt;/div&gt;&lt;div&gt;&amp;nbsp;__&amp;nbsp;__text__=__message.data.split__('%5cn')&lt;/div&gt;&lt;div&gt;&amp;nbsp;__&amp;nbsp;__result__=__self.rmcodequotesstate0__(text)&lt;/div&gt;&lt;div&gt;&amp;nbsp;__&amp;nbsp;__self.send__('[text]',__result)&lt;/div&gt;&lt;div&gt;⟫}&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt; (dispatcher, self, '&lt;div&gt;&lt;div&gt;&lt;div&gt;&lt;div&gt;&lt;div&gt;&lt;div&gt;raw {⟪&lt;/div&gt;&lt;div&gt;def rmCodeQuotesState0 (self, textList):&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; if (0 == len (textList)):&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; return []&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; else:&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; first = textList [0];&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; rest = textList [1:]&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; if (first == '```'):&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; return self.rmCodeQuotesState1 (rest)&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; else:&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; return [first] + self.rmCodeQuotesState0 (rest)&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;&amp;nbsp;&lt;/div&gt;&lt;div&gt;def rmCodeQuotesState1 (self, textList):&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; if (0 == len (textList)):&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; return []&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; else:&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; first = textList [0];&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; rest = textList [1:]&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; if (first == '```'):&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; return self.rmCodeQuotesState0 (rest)&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; else:&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; return self.rmCodeQuotesState1 (rest)&lt;/div&gt;&lt;div&gt;⟫}&lt;/div&gt;&lt;div&gt;on ➢❲text❳ {⟪&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; text = message.data.split ('%5Cn')&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; result = self.rmCodeQuotesState0 (text)&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; self.send ('[text]', result)&lt;/div&gt;&lt;div&gt;⟫}&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;')        
    conn0 = mpos.Connector ([mpos.Sender ('-', 'text')], [mpos.Receiver ('-', 'text')])        
    conn1 = mpos.Connector ([mpos.Sender ('-', 'text')], [mpos.Receiver ('Omit Code Quotes', 'text')])        
    conn2 = mpos.Connector ([mpos.Sender ('Omit Comments', 'text')], [mpos.Receiver ('-', 'text')])        
    conn3 = mpos.Connector ([mpos.Sender ('Omit Comments', 'text')], [mpos.Receiver ('Omit Code Quotes', 'text')])
    self.connections = [ conn0, conn1, conn2, conn3 ]
    self.children = {'&lt;div&gt;&lt;div&gt;&lt;div&gt;&lt;div&gt;&lt;div&gt;&lt;div&gt;raw {⟪&lt;/div&gt;&lt;div&gt;def rmCodeQuotesState0 (self, textList):&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; if (0 == len (textList)):&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; return []&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; else:&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; first = textList [0];&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; rest = textList [1:]&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; if (first == '```'):&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; return self.rmCodeQuotesState1 (rest)&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; else:&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; return [first] + self.rmCodeQuotesState0 (rest)&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;&amp;nbsp;&lt;/div&gt;&lt;div&gt;def rmCodeQuotesState1 (self, textList):&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; if (0 == len (textList)):&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; return []&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; else:&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; first = textList [0];&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; rest = textList [1:]&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; if (first == '```'):&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; return self.rmCodeQuotesState0 (rest)&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; else:&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; return self.rmCodeQuotesState1 (rest)&lt;/div&gt;&lt;div&gt;⟫}&lt;/div&gt;&lt;div&gt;on ➢❲text❳ {⟪&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; text = message.data.split ('%5Cn')&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; result = self.rmCodeQuotesState0 (text)&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; self.send ('[text]', result)&lt;/div&gt;&lt;div&gt;⟫}&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;':child0}
  
  def rmCodeQuotesState0 (self, textList):
      if (0 == len (textList)):
          return []
      else:
          first = textList [0];
          rest = textList [1:]
          if (first == '```'):
              return self.rmCodeQuotesState1 (rest)
          else:
              return [first] + self.rmCodeQuotesState0 (rest)
          
  def rmCodeQuotesState1 (self, textList):
      if (0 == len (textList)):
          return []
      else:
          first = textList [0];
          rest = textList [1:]
          if (first == '```'):
              return self.rmCodeQuotesState0 (rest)
          else:
              return self.rmCodeQuotesState1 (rest)
  
  

